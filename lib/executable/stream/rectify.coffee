{Transform} = require 'stream'
_ = require 'lodash'

# concatenates outputs generated by Agda executable,
# "Agda2>" and newline as delimiter
class Rectify extends Transform

    constructor: ->
        super
            objectMode: true

    _buffer: ''
    # _parentheseCount: 0

    _transform: (chunk, encoding, next) ->
        # helper functions from Haskell <3
        drop = (n, str) -> str.substr n
        take = (n, str) -> str.substr 0, n
        min  = (a, b)   -> a < b ? a : b
        trimLine = (line) -> line.replace('Agda2>', '').trim()

        @_buffer += chunk.toString()
        lines = @_buffer.split '\n'

        _.initial(lines).map(trimLine).forEach (line) => @push line
        @_buffer = _.last(lines)

        next()


module.exports = Rectify
